{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport OrderSummary from '@/components/OrderSummary.vue';\nexport default {\n  name: 'MyAccount',\n  components: {\n    OrderSummary\n  },\n  mounted() {\n    document.title = 'My account | Sports eshop';\n    this.getMyOrders();\n  },\n  data() {\n    return {\n      orders: []\n    };\n  },\n  methods: {\n    logout() {\n      axios.defaults.headers.common[\"Authorization\"] = \"\";\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"userid\");\n      this.$store.commit('removeToken');\n      this.$router.push('/');\n    },\n    async getMyOrders() {\n      this.$store.commit('setIsLoading', true);\n      const authToken = localStorage.getItem('token'); // Retrieve the authentication token from localStorage\n\n      // Check if the token is present before making the request\n      if (authToken) {\n        axios.defaults.headers.common['Authorization'] = `Token ${authToken}`;\n        try {\n          const response = await axios.get('/api/v1/orders/');\n          this.orders = response.data;\n        } catch (error) {\n          console.error(error);\n        }\n        this.$store.commit('setIsLoading', false);\n      } else {\n        // Handle the case when the token is not available (e.g., user not logged in)\n        console.warn('Authentication token not available. User may not be logged in.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","OrderSummary","name","components","mounted","document","title","getMyOrders","data","orders","methods","logout","defaults","headers","common","localStorage","removeItem","$store","commit","$router","push","authToken","getItem","response","get","error","console","warn"],"sources":["C:\\Users\\Agelos\\PycharmProjects\\sports_eshop_project\\sports_eshop_vue\\src\\views\\MyAccount.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-my-account\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title\">My account</h1>\r\n            </div>\r\n\r\n            <div class=\"column is-12\">\r\n                <button @click=\"logout()\" class=\"button is-danger\">Log out</button>\r\n            </div>\r\n\r\n            <hr>\r\n\r\n            <div class=\"column is-12\">\r\n                <h2 class=\"subtitle\">My orders</h2>\r\n                \r\n                <OrderSummary\r\n                    v-for=\"order in orders\"\r\n                    :key=\"order.id\"\r\n                    :order=\"order\" />\r\n\r\n                 \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport OrderSummary from '@/components/OrderSummary.vue'\r\n\r\nexport default {\r\n    name: 'MyAccount',\r\n    components: {\r\n        OrderSummary\r\n    },\r\n    mounted() {\r\n        document.title = 'My account | Sports eshop'\r\n        this.getMyOrders()\r\n    },\r\n    data() {\r\n        return {\r\n            orders: []\r\n        }\r\n    },\r\n    methods: {\r\n        logout() {\r\n            axios.defaults.headers.common[\"Authorization\"] = \"\"\r\n\r\n            localStorage.removeItem(\"token\")\r\n            localStorage.removeItem(\"username\")\r\n            localStorage.removeItem(\"userid\")\r\n\r\n            this.$store.commit('removeToken')\r\n\r\n            this.$router.push('/')\r\n        },\r\n\r\n        async getMyOrders() {\r\n    this.$store.commit('setIsLoading', true);\r\n\r\n    const authToken = localStorage.getItem('token');  // Retrieve the authentication token from localStorage\r\n\r\n    // Check if the token is present before making the request\r\n    if (authToken) {\r\n        axios.defaults.headers.common['Authorization'] = `Token ${authToken}`;\r\n\r\n        try {\r\n            const response = await axios.get('/api/v1/orders/');\r\n            this.orders = response.data;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        this.$store.commit('setIsLoading', false);\r\n    } else {\r\n        // Handle the case when the token is not available (e.g., user not logged in)\r\n        console.warn('Authentication token not available. User may not be logged in.');\r\n    }\r\n}\r\n\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";AA4BA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,YAAW,MAAO,+BAA8B;AAEvD,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACNC,QAAQ,CAACC,KAAI,GAAI,2BAA0B;IAC3C,IAAI,CAACC,WAAW,CAAC;EACrB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACLX,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAElDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAC/BD,YAAY,CAACC,UAAU,CAAC,UAAU;MAClCD,YAAY,CAACC,UAAU,CAAC,QAAQ;MAEhC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,aAAa;MAEhC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB,CAAC;IAED,MAAMb,WAAWA,CAAA,EAAG;MACxB,IAAI,CAACU,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC;MAExC,MAAMG,SAAQ,GAAIN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,EAAG;;MAElD;MACA,IAAID,SAAS,EAAE;QACXrB,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAK,SAAQO,SAAU,EAAC;QAErE,IAAI;UACA,MAAME,QAAO,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,iBAAiB,CAAC;UACnD,IAAI,CAACf,MAAK,GAAIc,QAAQ,CAACf,IAAI;QAC/B,EAAE,OAAOiB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACxB;QAEA,IAAI,CAACR,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC;MAC7C,OAAO;QACH;QACAQ,OAAO,CAACC,IAAI,CAAC,gEAAgE,CAAC;MAClF;IACJ;EAEI;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}